# ZEE tune0.yml
#
# -------------------------------------------------------------------

rootname: 'zee'
rngseed: 123456                       # Fixed seed for training data mixing
inputvars: 'mvavars_EB'               # Main file input description python file

# ----------------------------------------------------
mva_param: &MVA_INPUT_PARAM
  use_conditional: false              # Conditional (theory parametric) input
  primary_classes: [0,1]              # Primary class IDs in MVA (train, ROC etc.)
  signal_class: 1                     # Signal class ID
  #DA_class:    -2                    # Domain Adaptation class
  
  inputvar_scalar: 'MVA_SCALAR_VARS'  # Input variables, implemented under mvavars.py
  
  varnorm: 'zscore-weighted'          # Variable normalization: 'zscore', 'zscore-weighted', 'madscore', null
  
  frac: [0.6, 0.1, 0.3]               # Train vs validate/test split fraction
  
  # Imputation
  imputation_param:
    active: true                      # True / False
    var: null                         # Array of variables to be imputated, null for all
    algorithm: 'constant'             # Algorithm type: 'constant', iterative' (vector), knn' (vector), 'mean' (scalar), 'median' (scalar)
    fill_value: 0                     # For constant imputation
    knn_k: 8                          # Number of nearest neighbours considered
    values: null                      # Special values which indicate the need for imputation, if null, then only Inf/Nan

# ----------------------------------------------------
genesis_runmode:
  
  maxevents:  null
  inputmap:   null
  
  mcfile:     ['MC_*_EB.parquet']
  datafile:   ['Data_*_EB.parquet']
  
  tree_name:  null                    # 'ntuplizer/tree'

  targetfunc: null                    # Training target,    implemented under mctargets.py
  filterfunc: 'filter_nofilter'       # Training filtering, implemented under mcfilter.py
  cutfunc:    'cut_nocut'             # Basic cuts,         implemented under cuts.py

  xcorr_flow: True                    # Full N-point correlations computed between cuts
  pickle_size: 1000000                # Number of entries (events) per pickle file


# ----------------------------------------------------
train_runmode:

  <<: *MVA_INPUT_PARAM

  maxevents: null
  modeltag:  null

  ## Reweighting setup
  reweight: true
  reweight_mode: 'write'              # 'write', 'load'
  reweight_file: 'reweight_train.pkl' # differential reweighting model file
  
  
  reweight_param: &REWEIGHT_PARAM

    equal_frac: true                  # Equalize integrated class fractions
    differential: true                # Differential reweighting
    reference_class: 1                # Re-weight target class id
    
    # Differential reweighting param
    diff_param:
      
      maxevents: null                      # Maximum number of events for the PDF construction
      var:  ['probe_eta', 'probe_pt', 'fixedGridRhoAll']
      type: 'ML'                           # 'ML', 'pseudo-ND', '2D', '1D'
      
      hist_param:

        pseudo_type: 'product'             # 'product', 'geometric_mean'
        
        bins:  [[-3.1, 3.1, 50], [0.0001, 50.0, 50], [1.0, 60, 50]] # Make sure the bounds cover the phase space
        binmode:  ['linear', 'linear', 'linear']     # 'log10' or 'linear' or 'edges' (custom array) binning

        # ! Variable, and binning min/max boundaries are both transformed !
        transform: ['log10', null, null]   # 'log10', 'sqrt', 'square', null
        
        max_reg: 1000.0                    # Maximum weight cut-off regularization
      
      ML_param:
        active_model: xgb3Drw              # Under models.yml
        max_reg:      1000.0               # Maximum weight cut-off regularization
  

  ## Outlier protection in the training
  outlier_param:
    algo: 'truncate'   # algorithm: 'truncate', null
    qmin: 0.01         # in [0,100] 
    qmax: 99.9         # in [0,100]

    truncate_weights: True # Truncate outlier event weights
    process_validate: True # Protect also validation sample
  
  
  # ** Activate models here **
  # Give all models some unique identifier and label
  models:  !include configs/zee/models.yml
  active_models: &ACTIVE_MODELS
    
    - lzmlp0_nozero
    - dmlp0_nozero
    - fastkan0_nozero
    
    - lzmlp0
    - dmlp0
    - fastkan0
    
    - dbnf0
    - iceboost_plus
    - iceboost0
    - xgb0
  
  raytune: !include configs/zee/raytune.yml

  # Distillation training
  # -- the order must be compatible with the causal order in 'active_models'
  distillation:

    # Big, sophisticated model
    source:
      #xgb0
    
    # Simple, compressed models
    drains:
      #- xgb1
      # - add more here

  # Batched "deep" training
  batch_train_param:
    blocksize: 150000   # Maximum number of events simultaneously in RAM
    epochs: 50          # Number of global epochs (1 epoch = one iteration over the full input dataset), same for all models
    #num_cpu: null      # Set null for auto, or an integer for manual.

# ----------------------------------------------------
eval_runmode:

  <<: *MVA_INPUT_PARAM

  maxevents: null
  modeltag:  null
  
  reweight: true
  reweight_mode: 'load'          # 'write', 'load'
  reweight_file: 'reweight_train.pkl'

  reweight_param: *REWEIGHT_PARAM

  models:  !include configs/zee/models.yml
  active_models: *ACTIVE_MODELS

# ----------------------------------------------------
plot_param: !include configs/zee/plots.yml

